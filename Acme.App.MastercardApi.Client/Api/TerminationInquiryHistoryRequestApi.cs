/*
 * MATCH API
 *
 * Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: apisupport@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Acme.App.MastercardApi.Client.Client;
using Acme.App.MastercardApi.Client.Model;

namespace Acme.App.MastercardApi.Client.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITerminationInquiryHistoryRequestApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// ##### Retrieves historical termination inquiry results.
        /// </summary>
        /// <remarks>
        /// Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. To access the inquiry results of the past inquiries, acquirer should pass the inquiry reference number (IRN) received from the previous inquiries (TerminationInquiryRequest). For further details refer the documentation on [Use Cases.](/match/documentation/use-cases)  
        /// </remarks>
        /// <exception cref="Acme.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="pageOffset">The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.</param>
        /// <param name="pageLength">The maximum number of items to retrieve within the current \&quot;page\&quot; of results.</param>
        /// <param name="format">Describes format of the response you wants to serverd, response can be delevired either as XML or JSON.</param>
        /// <param name="acquirerId">The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource.</param>
        /// <param name="IRN">Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests.</param>
        /// <returns>TerminationInquirySchema</returns>
        TerminationInquirySchema TerminationInquiryIRNGet(int pageOffset, int pageLength, string format, string acquirerId, string IRN);

        /// <summary>
        /// ##### Retrieves historical termination inquiry results.
        /// </summary>
        /// <remarks>
        /// Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. To access the inquiry results of the past inquiries, acquirer should pass the inquiry reference number (IRN) received from the previous inquiries (TerminationInquiryRequest). For further details refer the documentation on [Use Cases.](/match/documentation/use-cases)  
        /// </remarks>
        /// <exception cref="Acme.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="pageOffset">The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.</param>
        /// <param name="pageLength">The maximum number of items to retrieve within the current \&quot;page\&quot; of results.</param>
        /// <param name="format">Describes format of the response you wants to serverd, response can be delevired either as XML or JSON.</param>
        /// <param name="acquirerId">The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource.</param>
        /// <param name="IRN">Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests.</param>
        /// <returns>ApiResponse of TerminationInquirySchema</returns>
        ApiResponse<TerminationInquirySchema> TerminationInquiryIRNGetWithHttpInfo(int pageOffset, int pageLength, string format, string acquirerId, string IRN);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITerminationInquiryHistoryRequestApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// ##### Retrieves historical termination inquiry results.
        /// </summary>
        /// <remarks>
        /// Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. To access the inquiry results of the past inquiries, acquirer should pass the inquiry reference number (IRN) received from the previous inquiries (TerminationInquiryRequest). For further details refer the documentation on [Use Cases.](/match/documentation/use-cases)  
        /// </remarks>
        /// <exception cref="Acme.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="pageOffset">The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.</param>
        /// <param name="pageLength">The maximum number of items to retrieve within the current \&quot;page\&quot; of results.</param>
        /// <param name="format">Describes format of the response you wants to serverd, response can be delevired either as XML or JSON.</param>
        /// <param name="acquirerId">The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource.</param>
        /// <param name="IRN">Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TerminationInquirySchema</returns>
        System.Threading.Tasks.Task<TerminationInquirySchema> TerminationInquiryIRNGetAsync(int pageOffset, int pageLength, string format, string acquirerId, string IRN, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// ##### Retrieves historical termination inquiry results.
        /// </summary>
        /// <remarks>
        /// Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. To access the inquiry results of the past inquiries, acquirer should pass the inquiry reference number (IRN) received from the previous inquiries (TerminationInquiryRequest). For further details refer the documentation on [Use Cases.](/match/documentation/use-cases)  
        /// </remarks>
        /// <exception cref="Acme.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="pageOffset">The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.</param>
        /// <param name="pageLength">The maximum number of items to retrieve within the current \&quot;page\&quot; of results.</param>
        /// <param name="format">Describes format of the response you wants to serverd, response can be delevired either as XML or JSON.</param>
        /// <param name="acquirerId">The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource.</param>
        /// <param name="IRN">Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TerminationInquirySchema)</returns>
        System.Threading.Tasks.Task<ApiResponse<TerminationInquirySchema>> TerminationInquiryIRNGetWithHttpInfoAsync(int pageOffset, int pageLength, string format, string acquirerId, string IRN, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ITerminationInquiryHistoryRequestApi : ITerminationInquiryHistoryRequestApiSync, ITerminationInquiryHistoryRequestApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class TerminationInquiryHistoryRequestApi : ITerminationInquiryHistoryRequestApi
    {
        private Acme.App.MastercardApi.Client.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="TerminationInquiryHistoryRequestApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TerminationInquiryHistoryRequestApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TerminationInquiryHistoryRequestApi"/> class.
        /// </summary>
        /// <returns></returns>
        public TerminationInquiryHistoryRequestApi(String basePath)
        {
            this.Configuration = Acme.App.MastercardApi.Client.Client.Configuration.MergeConfigurations(
                Acme.App.MastercardApi.Client.Client.GlobalConfiguration.Instance,
                new Acme.App.MastercardApi.Client.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Acme.App.MastercardApi.Client.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Acme.App.MastercardApi.Client.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Acme.App.MastercardApi.Client.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TerminationInquiryHistoryRequestApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public TerminationInquiryHistoryRequestApi(Acme.App.MastercardApi.Client.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Acme.App.MastercardApi.Client.Client.Configuration.MergeConfigurations(
                Acme.App.MastercardApi.Client.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Acme.App.MastercardApi.Client.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Acme.App.MastercardApi.Client.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Acme.App.MastercardApi.Client.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="TerminationInquiryHistoryRequestApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public TerminationInquiryHistoryRequestApi(Acme.App.MastercardApi.Client.Client.ISynchronousClient client, Acme.App.MastercardApi.Client.Client.IAsynchronousClient asyncClient, Acme.App.MastercardApi.Client.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Acme.App.MastercardApi.Client.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Acme.App.MastercardApi.Client.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Acme.App.MastercardApi.Client.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public String GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Acme.App.MastercardApi.Client.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Acme.App.MastercardApi.Client.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// ##### Retrieves historical termination inquiry results. Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. To access the inquiry results of the past inquiries, acquirer should pass the inquiry reference number (IRN) received from the previous inquiries (TerminationInquiryRequest). For further details refer the documentation on [Use Cases.](/match/documentation/use-cases)  
        /// </summary>
        /// <exception cref="Acme.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="pageOffset">The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.</param>
        /// <param name="pageLength">The maximum number of items to retrieve within the current \&quot;page\&quot; of results.</param>
        /// <param name="format">Describes format of the response you wants to serverd, response can be delevired either as XML or JSON.</param>
        /// <param name="acquirerId">The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource.</param>
        /// <param name="IRN">Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests.</param>
        /// <returns>TerminationInquirySchema</returns>
        public TerminationInquirySchema TerminationInquiryIRNGet(int pageOffset, int pageLength, string format, string acquirerId, string IRN)
        {
            Acme.App.MastercardApi.Client.Client.ApiResponse<TerminationInquirySchema> localVarResponse = TerminationInquiryIRNGetWithHttpInfo(pageOffset, pageLength, format, acquirerId, IRN);
            return localVarResponse.Data;
        }

        /// <summary>
        /// ##### Retrieves historical termination inquiry results. Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. To access the inquiry results of the past inquiries, acquirer should pass the inquiry reference number (IRN) received from the previous inquiries (TerminationInquiryRequest). For further details refer the documentation on [Use Cases.](/match/documentation/use-cases)  
        /// </summary>
        /// <exception cref="Acme.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="pageOffset">The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.</param>
        /// <param name="pageLength">The maximum number of items to retrieve within the current \&quot;page\&quot; of results.</param>
        /// <param name="format">Describes format of the response you wants to serverd, response can be delevired either as XML or JSON.</param>
        /// <param name="acquirerId">The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource.</param>
        /// <param name="IRN">Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests.</param>
        /// <returns>ApiResponse of TerminationInquirySchema</returns>
        public Acme.App.MastercardApi.Client.Client.ApiResponse<TerminationInquirySchema> TerminationInquiryIRNGetWithHttpInfo(int pageOffset, int pageLength, string format, string acquirerId, string IRN)
        {
            // verify the required parameter 'format' is set
            if (format == null)
                throw new Acme.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'format' when calling TerminationInquiryHistoryRequestApi->TerminationInquiryIRNGet");

            // verify the required parameter 'acquirerId' is set
            if (acquirerId == null)
                throw new Acme.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'acquirerId' when calling TerminationInquiryHistoryRequestApi->TerminationInquiryIRNGet");

            // verify the required parameter 'IRN' is set
            if (IRN == null)
                throw new Acme.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'IRN' when calling TerminationInquiryHistoryRequestApi->TerminationInquiryIRNGet");

            Acme.App.MastercardApi.Client.Client.RequestOptions localVarRequestOptions = new Acme.App.MastercardApi.Client.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };

            var localVarContentType = Acme.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Acme.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("IRN", Acme.App.MastercardApi.Client.Client.ClientUtils.ParameterToString(IRN)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Acme.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "PageOffset", pageOffset));
            localVarRequestOptions.QueryParameters.Add(Acme.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "PageLength", pageLength));
            localVarRequestOptions.QueryParameters.Add(Acme.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "Format", format));
            localVarRequestOptions.QueryParameters.Add(Acme.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "AcquirerId", acquirerId));


            // make the HTTP request
            var localVarResponse = this.Client.Get<TerminationInquirySchema>("/termination-inquiry/{IRN}", localVarRequestOptions, this.Configuration);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TerminationInquiryIRNGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

        /// <summary>
        /// ##### Retrieves historical termination inquiry results. Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. To access the inquiry results of the past inquiries, acquirer should pass the inquiry reference number (IRN) received from the previous inquiries (TerminationInquiryRequest). For further details refer the documentation on [Use Cases.](/match/documentation/use-cases)  
        /// </summary>
        /// <exception cref="Acme.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="pageOffset">The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.</param>
        /// <param name="pageLength">The maximum number of items to retrieve within the current \&quot;page\&quot; of results.</param>
        /// <param name="format">Describes format of the response you wants to serverd, response can be delevired either as XML or JSON.</param>
        /// <param name="acquirerId">The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource.</param>
        /// <param name="IRN">Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of TerminationInquirySchema</returns>
        public async System.Threading.Tasks.Task<TerminationInquirySchema> TerminationInquiryIRNGetAsync(int pageOffset, int pageLength, string format, string acquirerId, string IRN, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Acme.App.MastercardApi.Client.Client.ApiResponse<TerminationInquirySchema> localVarResponse = await TerminationInquiryIRNGetWithHttpInfoAsync(pageOffset, pageLength, format, acquirerId, IRN, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// ##### Retrieves historical termination inquiry results. Returns information about Merchants, URLs and up to five principal owners, that have been terminated by an acquiring bank from a previous inquiry. To access the inquiry results of the past inquiries, acquirer should pass the inquiry reference number (IRN) received from the previous inquiries (TerminationInquiryRequest). For further details refer the documentation on [Use Cases.](/match/documentation/use-cases)  
        /// </summary>
        /// <exception cref="Acme.App.MastercardApi.Client.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="pageOffset">The zero-based offset to start at. The actual start position is this value +1. An offset of 10 starts at item 11. Combined with the PageLength option this allows pagination to be supported through the service requests.</param>
        /// <param name="pageLength">The maximum number of items to retrieve within the current \&quot;page\&quot; of results.</param>
        /// <param name="format">Describes format of the response you wants to serverd, response can be delevired either as XML or JSON.</param>
        /// <param name="acquirerId">The Member ICA number which is used to validate that the application has permission to hit the MATCH database. This number must be obtained from a participating MATCH acquiring bank or entity before a developer can access the MATCH resource.</param>
        /// <param name="IRN">Inquiry Reference Number (IRN) A unique identifier generated by the MATCH system that is returned in the original, previously submitted POST request (contained within the \&quot;TerminationInquiry.Ref\&quot; response node). This unique identifier should be present as a URL parameter within all GET requests.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (TerminationInquirySchema)</returns>
        public async System.Threading.Tasks.Task<Acme.App.MastercardApi.Client.Client.ApiResponse<TerminationInquirySchema>> TerminationInquiryIRNGetWithHttpInfoAsync(int pageOffset, int pageLength, string format, string acquirerId, string IRN, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'format' is set
            if (format == null)
                throw new Acme.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'format' when calling TerminationInquiryHistoryRequestApi->TerminationInquiryIRNGet");

            // verify the required parameter 'acquirerId' is set
            if (acquirerId == null)
                throw new Acme.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'acquirerId' when calling TerminationInquiryHistoryRequestApi->TerminationInquiryIRNGet");

            // verify the required parameter 'IRN' is set
            if (IRN == null)
                throw new Acme.App.MastercardApi.Client.Client.ApiException(400, "Missing required parameter 'IRN' when calling TerminationInquiryHistoryRequestApi->TerminationInquiryIRNGet");


            Acme.App.MastercardApi.Client.Client.RequestOptions localVarRequestOptions = new Acme.App.MastercardApi.Client.Client.RequestOptions();

            String[] _contentTypes = new String[] {
            };

            // to determine the Accept header
            String[] _accepts = new String[] {
                "application/json"
            };


            var localVarContentType = Acme.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null) localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);

            var localVarAccept = Acme.App.MastercardApi.Client.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null) localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);

            localVarRequestOptions.PathParameters.Add("IRN", Acme.App.MastercardApi.Client.Client.ClientUtils.ParameterToString(IRN)); // path parameter
            localVarRequestOptions.QueryParameters.Add(Acme.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "PageOffset", pageOffset));
            localVarRequestOptions.QueryParameters.Add(Acme.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "PageLength", pageLength));
            localVarRequestOptions.QueryParameters.Add(Acme.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "Format", format));
            localVarRequestOptions.QueryParameters.Add(Acme.App.MastercardApi.Client.Client.ClientUtils.ParameterToMultiMap("", "AcquirerId", acquirerId));


            // make the HTTP request

            var localVarResponse = await this.AsynchronousClient.GetAsync<TerminationInquirySchema>("/termination-inquiry/{IRN}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("TerminationInquiryIRNGet", localVarResponse);
                if (_exception != null) throw _exception;
            }

            return localVarResponse;
        }

    }
}
